syntax = "proto3";

service ChatService {
  rpc CheckVersion(Version) returns (VersionResponse);
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc ListUsers (ListUsersRequest) returns (ListUsersResponse);
  rpc SendMessage (SendMessageRequest) returns (SendMessageResponse);
  rpc Subscribe (SubscribeRequest) returns (stream Message);
  rpc MarkRead (MarkReadRequest) returns (MarkReadResponse);
  rpc DeleteUnreadMessage (DeleteUnreadMessageRequest) returns (DeleteUnreadMessageResponse);
  rpc ReceiveMessages (ReceiveMessagesRequest) returns (ReceiveMessagesResponse);
  rpc DeleteAccount (DeleteAccountRequest) returns (DeleteAccountResponse);
  rpc Logout (LogoutRequest) returns (LogoutResponse);
}

service ReplicationService {
  rpc ReplicateMessage (ReplicateMessageRequest) returns (ReplicateMessageResponse);
  rpc ReplicateRegister (ReplicateRegisterRequest) returns (ReplicateRegisterResponse);
  rpc ReplicateMarkRead (ReplicateMarkReadRequest) returns (ReplicateMarkReadResponse);
  rpc ReplicateDeleteMessage (ReplicateDeleteMessageRequest) returns (ReplicateDeleteMessageResponse);
  rpc ReplicateDeleteAccount (ReplicateDeleteAccountRequest) returns (ReplicateDeleteAccountResponse);
  rpc ReplicateSubscribe (ReplicateSubscribeRequest) returns (ReplicateSubscribeResponse);
}

service Health {
  rpc Ping(PingRequest) returns (PingResponse);
}

message Version {
  string version = 1;
}

message VersionResponse {
  bool success = 1;
  string message = 2;
}

message RegisterRequest {
  string username = 1;
  string password = 2;
}

message RegisterResponse {
  string message = 1;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string message = 1;
  int32 unread_messages = 2;
}

message ListUsersRequest {}

message ListUsersResponse {
  repeated string users = 1;
}

message SendMessageRequest {
  string sender = 1;
  string recipient = 2;
  string message = 3;
}

message SendMessageResponse {
  string status = 1;
  string message_id = 2;
}

message SubscribeRequest {
  string username = 1;
}

message Message {
  string id = 1;
  string sender = 2;
  string message = 3;
  string status = 4;
}

message MarkReadRequest {
  string username = 1;
  string contact = 2;
  int32 batch_num = 3;
}

message MarkReadResponse {
  string message = 1;
}

message DeleteUnreadMessageRequest {
  string sender = 1;
  string recipient = 2;
  string message_id = 3;
}

message DeleteUnreadMessageResponse {
  string status = 1;
  string message = 2;
}

message ReceiveMessagesRequest {
  string username = 1;
}

message ReceiveMessagesResponse {
  string status = 1;
  repeated Message messages = 2;
}

message DeleteAccountRequest {
  string username = 1;
}

message DeleteAccountResponse {
  string message = 1;
}

message LogoutRequest {
  string username = 1;
}

message LogoutResponse {
  string message = 1;
}

// Replication messages

message ReplicateMessageRequest {
  string message_id = 1;
  string sender = 2;
  string recipient = 3;
  string message = 4;
  string status = 5;
}

message ReplicateMessageResponse {
  bool success = 1;
}

message ReplicateRegisterRequest {
  string username = 1;
  string password = 2;
}

message ReplicateRegisterResponse {
  bool success = 1;
}

message ReplicateMarkReadRequest {
  string username = 1;
  string contact = 2;
  int32 batch_num = 3;
}

message ReplicateMarkReadResponse {
  bool success = 1;
}

message ReplicateDeleteMessageRequest {
  string sender = 1;
  string recipient = 2;
  string message_id = 3;
}

message ReplicateDeleteMessageResponse {
  bool success = 1;
}

message ReplicateDeleteAccountRequest {
  string username = 1;
}

message ReplicateDeleteAccountResponse {
  bool success = 1;
}

message ReplicateSubscribeRequest {
  string username = 1;
  bool subscribed = 2;
}

message ReplicateSubscribeResponse {
  bool success = 1;
}

message PingRequest {}

message PingResponse {
  bool alive = 1;
}
